<!--Load the AJAX API-->
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">

  // Load the Visualization API library and the piechart library.
  google.load('visualization', '1', {'packages':['corechart']});
  google.setOnLoadCallback(drawChart);
     // ... draw the chart...

     // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      // function drawChart() {

      // // Create the data table.
      // var data = new google.visualization.DataTable();
      // data.addColumn('string', 'Topping');
      // data.addColumn('number', 'Slices');
      // data.addRows([
      //   ['Mushrooms', 3],
      //   ['Onions', 1],
      //   ['Olives', 1],
      //   ['Zucchini', 1],
      //   ['Pepperoni', 2]
      // ]);

      // // Set chart options
      // var options = {'title':'How Much Pizza I Ate Last Night',
      //                'width':400,
      //                'height':300};

      // // Instantiate and draw our chart, passing in some options.
      // var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
      // chart.draw(data, options);
    // }
</script>

<!-- <div id="chart_div"></div>
 -->
<section id="data-analysis-screen">
  <h1>analyses</h1>
  
 

  <section id="data-stacked-barchart">
    <%= render 'users/analysis_partials/stacked_columnchart' %>
  </section>




  <section id="data-piechart">
    <%= render 'users/analysis_partials/piechart' %>
  </section>


  





  <!-- converts ruby object to JSON -->
  <!-- IMPORTANT -->
  <%= javascript_tag "var dataHash = #{@data_hash.to_json}" %> 
  <script>
    function hmsToSeconds(s) {
      var b = s.split(':');
      return b[0]*3600 + b[1]*60 + (+b[2] || 0);
    }

    function secondsToHMS(secs) {
      function z(n){return (n<10?'0':'') + n;}
      var sign = secs < 0? '-':'';
      secs = Math.abs(secs);
      return sign + z(secs/3600 |0) + ':' + z((secs%3600) / 60 |0) + ':' + z(secs%60);
    }

    //add a .getWeek() method to the Date() object
    Date.prototype.getWeek = function() {
        var onejan = new Date(this.getFullYear(), 0, 1);
        return Math.ceil((((this - onejan) / 86400000) + onejan.getDay() + 1) / 7);
    }


    function getPeriod(inputValue) {
      var isWeek = function(value) {
        var re = /^\d{4}\-[W]\d{2}$/;
        return re.test(value);
      }

      var isMonth = function(value) {
        var re = /^\d{4}-\d{2}$/;
        return re.test(value);
      }

      var isYear = function(value) {
        var re = /^\d{4}$/;
        return re.test(value);
      }

      if ( isWeek(inputValue) ) {
        return 'week';
      } else if ( isMonth(inputValue) ) {
        return 'month';
      } else if ( isYear(inputValue) ) {
        return 'year';
      } else {
        console.log('Error! Neither week, month or year!');
      }
    }


    function getPeriodData(inputValue) {
      var period = getPeriod(inputValue);

      if (period === "week") {
        return {
          'week': parseInt(inputValue.split('-')[1].split('W')[1]),
          'month': undefined,
          'year': parseInt(inputValue.split('-')[0])
        }
      } else if (period === "month") {
        return {
          'week': undefined,
          'month': parseInt(inputValue.split('-')[1]),
          'year': parseInt(inputValue.split('-')[0])
        }

      } else if (period === "year") {
        return {
          'week': undefined,
          'month': undefined,
          'year': parseInt(inputValue)
        }
      }
    }
    /*
     var testPeriodWeek = {
        'period': 'week',
        'week': 41,
        'month': undefined,
        'year': 2015
      }

      var testPeriodMonth = {
        'period': 'month',
        'week': undefined,
        'month': 10,
        'year': 2015
      }

      var testPeriodYear = {
        'period': 'year',
        'week': undefined,
        'month': undefined,
        'year': 2015
      }
    */

    function getUsageData(periodData, dataHash){
      var usageData = [],
          chosenPeriod = periodData['period'];

      /* loop through categories */
      for (var cat in dataHash) {
        if (dataHash.hasOwnProperty(cat)) {
          console.log(cat + " -> " + dataHash[cat]);
        }

        var usageDataObject = {},
            categoryEntries = dataHash[cat]['entries'],
            categoryEntriesLength = categoryEntries.length,
            secondsSpentOnCategory = 0;

        /* loop through entries in category */
        for (var i = 0; i < categoryEntriesLength; i++) {
          var starttime = categoryEntries[i]['starttime'].split('T')[1].split('.')[0],
              endtime = categoryEntries[i]['endtime'].split('T')[1].split('.')[0],
              entry_date = categoryEntries[i]['entry_date'];
              


          if (chosenPeriod === 'year') {
            if (entry_date.split('-')[0] != periodData['year']) {
              break; 
            }

          } else if ( chosenPeriod === 'month') {
            if (entry_date.split('-')[1].split('-')[0] != periodData['month']) {
              break;
            }

          } else if (chosenPeriod === 'week') {
            //???? TODO
            console.log('figure out week');
          }
          secondsSpentOnCategory += hmsToSeconds(endtime) - hmsToSeconds(starttime);

        }




        //insert category name
        usageDataObject['categoryName'] = cat;
        usageDataObject['minutesPerPeriod'] = secondsSpentOnCategory / 60;

        usageData.push(usageDataObject);


      }

  
      return usageData; //this usageData can be used for all charts (hopefully)
    }
    /*
      return [
        {
          'categoryName': 'work',
          'hmsPerPeriod': 20
        },
        {
          'categoryName': 'play',
          'hmsPerPeriod': 50
        }
      ]
    */


    function getPieData(usageData) {
      var pieData = [],
          pieColors = [
            {
              value: 300,
              color:"#F7464A",
              highlight: "#FF5A5E",
              label: "Red"
            },
            {
              value: 50,
              color: "#46BFBD",
              highlight: "#5AD3D1",
              label: "Green"
            },
            {
              value: 100,
              color: "#FDB45C",
              highlight: "#FFC870",
              label: "Yellow"
            },
            {
              value: 40,
              color: "#949FB1",
              highlight: "#A8B3C5",
              label: "Grey"
            },
            {
              value: 120,
              color: "#4D5360",
              highlight: "#616774",
              label: "Dark Grey"
            }
          ],
          usageDataLength = usageData.length;

      for (var i = 0; i < usageDataLength; i++) {
        var pieSlice = {
          value: usageData[i]['minutesPerPeriod'],
          label: usageData[i]['categoryName'],
          color: pieColors[i]['color'],
          highlight: pieColors[i]['highlight']
        }
        pieData.push(pieSlice);
      }

      return pieData;
    }
    
    
  </script>


</section>




<!-- 
//@data_hash ==>   
    {
     "new-test-category"=>{
       :id=>7, 
       :icon=>"3", 
       :entries=>[
         { 
           :starttime=>2000-01-01 13:00:00 UTC, 
           :endtime=>2000-01-01 14:30:00 UTC, 
           :entry_date=>nil, 
           :entry_id=>4
         }, 

         {
           :starttime=>2000-01-01 04:00:00 UTC, 
           :endtime=>2000-01-01 05:30:00 UTC, 
           :entry_date=>Mon, 26 Oct 2015, 
           :entry_id=>7
         }, 

         {
           :starttime=>2000-01-01 19:00:00 UTC, 
           :endtime=>2000-01-01 20:30:00 UTC, 
           :entry_date=>Mon, 26 Oct 2015, 
           :entry_id=>9
         }
       ]
     }, 
     "test"=>{
       :id=>1, 
       :icon=>"2", 
       :entries=>[

       ]
     }

   }
    -->