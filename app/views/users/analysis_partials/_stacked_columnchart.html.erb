<h1>Stacked ColumnChart</h1>


<section id="week-columnchart">
  <div></div>
</section>



<section id="total-columnchart"> <!-- give week/month/year option-->
  <h3>All Time activity by days</h3>
  <div></div>
</section>


<script>



  $(document).ready(function(){
      /* make week column chart */

    
      /* Draw total column chart */
      var columnChart = $('#total-columnchart div')[0],
          columnChartArray = getColumnChartArray(dataHash),
          columnChartOptions = {
            width: 600,
            height: 400,
            legend: { position: 'top', maxLines: 3 },
            bar: { groupWidth: '75%' },
            isStacked: true,
          };

      makeColumnChart(columnChartArray, columnChart, columnChartOptions);

  });


  function makeColumnChart(dataArray, chartEl, options) {
    var data = google.visualization.arrayToDataTable(dataArray),
        chart = new google.visualization.ColumnChart(chartEl) ;

    chart.draw(data, options);
  }

  function getColumnChartArray(dataHash){
    var dayOfWeekData = [
      ['Category', {role:'annotation'}],
      ['Sun', ''],
      ['Mon', ''],
      ['Tue', ''],
      ['Wed', ''],
      ['Thu', ''],
      ['Fri', ''],
      ['Sat', '']
    ],
      aSun = dayOfWeekData[1],
      aMon = dayOfWeekData[2],
      aTue = dayOfWeekData[3],
      aWed = dayOfWeekData[4],
      aThu = dayOfWeekData[5],
      aFri = dayOfWeekData[6],
      aSat = dayOfWeekData[7];
    
    /* loop through categories */
    for (var cat in dataHash){
      if (dataHash.hasOwnProperty(cat)) {
        console.log(cat + " -> " + dataHash[cat]);
      }

      var categoryHrsOnDays = {
        name: cat,
        Sunday: 0,
        Monday: 0,
        Tuesday: 0,
        Wednesday: 0,
        Thurday: 0,
        Friday: 0,
        Saturday: 0
      },
      categoryEntries = dataHash[cat]['entries'],
      categoryEntriesLength = categoryEntries.length;
      
      
      /* loop through entries in category */
      for (var i = 0; i < categoryEntriesLength; i++) {

        var starttime = categoryEntries[i]['starttime'].split('T')[1].split('.')[0],
            endtime = categoryEntries[i]['endtime'].split('T')[1].split('.')[0],
            entry_date = categoryEntries[i]['entry_date'];

        // with starttime and endtime find duration in Hrs
        var entryDurInHrs = getEntryDurInSec(starttime, endtime) / 3600,
            entryDay = getDay(entry_date);

        // here if you want to restrict insertion TODO


        //insert to categoryHrsOnDays according to the day it was
        categoryHrsOnDays[entryDay] += entryDurInHrs;                 
      }


      /* insert data from categoryHrsOnDays into dayOfWeekData; */
      var i = 0;
      for (var item in categoryHrsOnDays) {
        var dayOfWeekDataArray = dayOfWeekData[i],
            indexToInsertAt = dayOfWeekDataArray.length - 1;

        dayOfWeekDataArray.splice(indexToInsertAt, 0, categoryHrsOnDays[item]);        
        i ++
      }   
    }
    return dayOfWeekData;
  }


  function getEntryDurInSec(start, end) {
    return hmsToSeconds(end) - hmsToSeconds(start);
  }

  function getDay(date) {
    var day = new Date(Date.parse(date)).getDay(),
        dayNameArray = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
    return dayNameArray[day];
  }


</script>