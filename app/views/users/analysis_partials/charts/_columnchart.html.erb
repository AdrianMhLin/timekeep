<section id="columnchart" class="data-charts">
  <h3 class="chart-title">Column Chart</h3>
  <div style="width:100vw; height:30vh;"></div>
</section>


<script>


  function makeColumnChart(dataArray, chartEl, options) {
    var data = google.visualization.arrayToDataTable(dataArray),
        chart = new google.visualization.ColumnChart(chartEl) ;

    chart.draw(data, options);
  }

  function getColumnChartArray(dataHash, sampledPeriod){
    var chartData = [
      ['Category', {role:'annotation'}],
      ['Sun', ''],
      ['Mon', ''],
      ['Tue', ''],
      ['Wed', ''],
      ['Thu', ''],
      ['Fri', ''],
      ['Sat', '']
    ],
      aSun = chartData[1],
      aMon = chartData[2],
      aTue = chartData[3],
      aWed = chartData[4],
      aThu = chartData[5],
      aFri = chartData[6],
      aSat = chartData[7];
    
    /* loop through categories */
    for (var cat in dataHash){
      // if (dataHash.hasOwnProperty(cat)) {
      //   console.log(cat + " -> " + dataHash[cat]);
      // }

      var categoryHrsOnDays = {
        name: cat, 
        Saturday: 0, 
        Sunday: 0,
        Monday: 0,
        Tuesday: 0,
        Wednesday: 0,
        Thurday: 0,
        Friday: 0
        // TODO: I have no idea why the hash must be arranged as such. But without it like this, all the entry dates are shifted back one day. If I increase the index number, errors occur. This fixes it.
      },
      categoryEntries = dataHash[cat]['entries'],
      categoryEntriesLength = categoryEntries.length;
      
      
      /* loop through entries in category */
      for (var i = 0; i < categoryEntriesLength; i++) {

        var starttime = categoryEntries[i]['starttime'].split('T')[1].split('.')[0],
            endtime = categoryEntries[i]['endtime'].split('T')[1].split('.')[0],
            entry_date = categoryEntries[i]['entry_date'];

        // with starttime and endtime find duration in Hrs
        var entryDurInHrs = getEntryDurInSec(starttime, endtime) / 3600,
            entryDay = getDay(entry_date);
            

        // here if you want to restrict insertion TODO


        //insert to categoryHrsOnDays according to the day it was
        
        if (sampledPeriod === "eternity") {
          categoryHrsOnDays[entryDay] += entryDurInHrs;
        } else {
          var acceptablePeriods = getAcceptablePeriodsArray(sampledPeriod);
          if (acceptablePeriods.indexOf(entry_date) !== -1) {
            categoryHrsOnDays[entryDay] += entryDurInHrs;
          }
        }                 
      }


      /* insert data from categoryHrsOnDays into chartData; */
      var i = 0;
      for (var item in categoryHrsOnDays) {
        var chartDataArray = chartData[i];
        var indexToInsertAt = chartDataArray.length + 1;

        chartDataArray.splice(indexToInsertAt, 0, categoryHrsOnDays[item]);        
        i ++
      }   
    }
    return chartData;
  }


  function getEntryDurInSec(start, end) {
    return hmsToSeconds(end) - hmsToSeconds(start);
  }

  function getDay(date) {
    var day = new Date(Date.parse(date)).getDay(),
        dayNameArray = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
    return dayNameArray[day];
  }


</script>