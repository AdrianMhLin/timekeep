<section id="donutchart" class="data-charts">
  <h3 class="chart-title">Donut Chart</h3>
  <div style="width:100vw; height:30vh"></div>
</section>


<script>

  function makeDonutChart(dataArray, chartEl, options) {
    var data = google.visualization.arrayToDataTable(dataArray),
        chart = new google.visualization.PieChart(chartEl);

    chart.draw(data, options);
  }

  function getDonutChartArray(dataHash, sampledPeriod){
    var chartData = [
      ['Category', 'Recorded hours']
    ];

    /* loop through categories */
    for (var cat in dataHash){
      // if (dataHash.hasOwnProperty(cat)) {
      //   console.log(cat + " -> " + dataHash[cat]);
      // }

      var categoryEntries = dataHash[cat]['entries'],
          categoryEntriesLength = categoryEntries.length,
          categoryData = [cat],
          categoryTimeInHrs = 0;    

      /* loop through entries in category */
      for (var i = 0; i < categoryEntriesLength; i++) {

        var starttime = categoryEntries[i]['starttime'].split('T')[1].split('.')[0],
            endtime = categoryEntries[i]['endtime'].split('T')[1].split('.')[0],
            entry_date = categoryEntries[i]['entry_date'];

        // with starttime and endtime find duration in Hrs
        var entryDurInHrs = getEntryDurInSec(starttime, endtime) / 3600;

        

        //if entry's entry_date is in the acceptable time period, add it to the total time spent on the category; if it's eternity, do all

        if (sampledPeriod === "eternity") {
          categoryTimeInHrs += entryDurInHrs;
        } else {
          var acceptablePeriods = getAcceptablePeriodsArray(sampledPeriod);
          if (acceptablePeriods.indexOf(entry_date) !== -1) {
            categoryTimeInHrs += entryDurInHrs;
          }
        }

      }
    
      categoryData.push(categoryTimeInHrs);
      chartData.push(categoryData);
    }
    return chartData;
  }

  
</script>










